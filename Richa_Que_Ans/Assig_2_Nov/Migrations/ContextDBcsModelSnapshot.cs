// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Richa_Que_Ans.Models;

namespace Richa_Que_Ans.Migrations
{
    [DbContext(typeof(ContextDBcs))]
    partial class ContextDBcsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Richa_Que_Ans.Models.Answers", b =>
                {
                    b.Property<int>("AnswerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerDateAndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.HasKey("AnswerID");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            AnswerID = 1,
                            AnswerDateAndTime = "11/24/2021 10:30:25 PM",
                            AnswerText = "wake up early and do atleat 30 min exercise",
                            QuestionID = 1
                        },
                        new
                        {
                            AnswerID = 2,
                            AnswerDateAndTime = "11/22/2021 10:30:25 AM",
                            AnswerText = "Eat healthy food in the mornings",
                            QuestionID = 2
                        },
                        new
                        {
                            AnswerID = 3,
                            AnswerDateAndTime = "05/10/2021 08:00:40 AM",
                            AnswerText = "I learned dancing as an extra activity",
                            QuestionID = 3
                        });
                });

            modelBuilder.Entity("Richa_Que_Ans.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Health"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Diet"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Arts"
                        });
                });

            modelBuilder.Entity("Richa_Que_Ans.Models.Question", b =>
                {
                    b.Property<int>("QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("QuestionDateAndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionID = 1,
                            CategoryID = 1,
                            QuestionDateAndTime = "11/04/2022 01:30:25 PM",
                            QuestionName = "What is the best Time to do exercise in morning ?"
                        },
                        new
                        {
                            QuestionID = 2,
                            CategoryID = 2,
                            QuestionDateAndTime = "10/04/2022 16:50:25 AM",
                            QuestionName = "What type of food is best ?"
                        },
                        new
                        {
                            QuestionID = 3,
                            CategoryID = 3,
                            QuestionDateAndTime = "03/04/2021 05:00:40 PM",
                            QuestionName = "You do any external activities?"
                        });
                });

            modelBuilder.Entity("Richa_Que_Ans.Models.Question", b =>
                {
                    b.HasOne("Richa_Que_Ans.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
