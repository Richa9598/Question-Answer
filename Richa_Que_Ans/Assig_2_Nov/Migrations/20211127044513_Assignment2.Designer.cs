// <auto-generated />
using Richa_Que_Ans.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Richa_Que_Ans.Migrations
{
    [DbContext(typeof(ContextDBcs))]
    [Migration("20211127044513_Assignment2")]
    partial class Assignment2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assig_2_Nov.Models.Answers", b =>
                {
                    b.Property<int>("AnswerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerDateAndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.HasKey("AnswerID");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            AnswerID = 1,
                            AnswerDateAndTime = "13/11/2021 012:00:00 PM",
                            AnswerText = "Check the spelling and try again",
                            QuestionID = 1
                        },
                        new
                        {
                            AnswerID = 2,
                            AnswerDateAndTime = "23/02/2020  09:30:40 AM",
                            AnswerText = "use the URL() to insert the background image",
                            QuestionID = 2
                        },
                        new
                        {
                            AnswerID = 3,
                            AnswerDateAndTime = "11/03/2021 10:00:25 AM",
                            AnswerText = "Use the menu option to set the title bar",
                            QuestionID = 3
                        });
                });

            modelBuilder.Entity("Assig_2_Nov.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "HTML"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "CSS"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "JavaScript"
                        });
                });

            modelBuilder.Entity("Assig_2_Nov.Models.Question", b =>
                {
                    b.Property<int>("QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("QuestionDateAndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionID = 1,
                            CategoryID = 1,
                            QuestionDateAndTime = "11/03/2021 10:00:25 AM",
                            QuestionName = "document.getElementByID() is not working"
                        },
                        new
                        {
                            QuestionID = 2,
                            CategoryID = 2,
                            QuestionDateAndTime = "23/02/2020  09:30:40 AM",
                            QuestionName = "How to check background image in CSS"
                        },
                        new
                        {
                            QuestionID = 3,
                            CategoryID = 3,
                            QuestionDateAndTime = "13/11/2021 012:00:00 PM",
                            QuestionName = "How to display icon the browser title bar using HTML"
                        });
                });

            modelBuilder.Entity("Assig_2_Nov.Models.Question", b =>
                {
                    b.HasOne("Assig_2_Nov.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
